[project]
name = "driver-score"
version = "0.1.0"
readme = "README.md"
# Cannot use python 3.12 because of conflict with sqlagencode
requires-python = ">=3.10,<3.11"

[project.scripts]
# ds = "driver_score.app:main"

[tool.setuptools]
package-data = { "sample" = ["settings.yaml"] }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Dépendances gérées avec Poetry mais conservant la structure du projet
[tool.poetry.dependencies]
python = ">=3.10,<3.11"

# Core dependencies
fastapi = "0.103.0"
pydantic = "2.6.4"
pydantic-settings = "2.2.1"
pydantic_core = "2.16.3"
starlette = "0.27.0"
orjson = "3.10.0"
python-multipart = "0.0.9"
dynaconf = "3.2.5"
python-dotenv = "1.0.1"

# Web server
uvicorn = {version = "0.29.0", extras = ["standard"]}
uvloop = "0.19.0"
watchfiles = "0.21.0"
websockets = "12.0"
httptools = "0.6.1"
h11 = "0.14.0"
aiofiles = "23.2.1"

# Database
sqlalchemy = "1.4.52"
geoalchemy2 = "0.14.7"
sqlacodegen = "2.3.0"
alembic = "1.13.1"
psycopg2 = "2.9.9"
greenlet = "3.0.3"
mako = "1.3.2"
markupsafe = "2.1.5"

# Data processing
numpy = "1.26.4"
pandas = "2.2.1"
geopandas = "0.14.3"
shapely = "2.0.3"
fiona = "1.9.6"
pyproj = "3.6.1"
python-dateutil = "2.9.0.post0"
pytz = "2024.1"
tzdata = "2024.1"
tsidpy = "1.1.5"

# Utilities
pyyaml = "6.0.1"
click = "8.1.7"
click-plugins = "1.1.1"
cligj = "0.7.2"
tenacity = "8.2.3"
inflect = "7.2.0"
six = "1.16.0"
typing-extensions = "4.10.0"
annotated-types = "0.6.0"
idna = "3.6"
sniffio = "1.3.1"
anyio = "4.3.0"
certifi = "2024.2.2"
pydantic-geojson = "^0.2.0"
scipy = "^1.15.3"
python-magic = "^0.4.27"

[tool.poetry.group.dev.dependencies]
# Development tools
ruff = "0.3.5"
mypy = "1.9.0"
pytest = "8.1.1"
pre-commit = "3.7.0"
coverage = "7.4.4"
typeguard = "4.2.1"
mypy-extensions = "1.0.0"
tomli = "2.0.1"
packaging = "24.0"
platformdirs = "4.2.0"
filelock = "3.13.3"
distlib = "0.3.8"
virtualenv = "20.25.1"
cfgv = "3.4.0"
nodeenv = "1.8.0"
identify = "2.5.35"
pluggy = "1.4.0"
exceptiongroup = "1.2.0"
iniconfig = "2.0.0"
attrs = "23.2.0"
pathspec = "0.12.1"
hatchling = "1.22.4"
trove-classifiers = "2024.3.25"
more-itertools = "10.2.0"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120

[tool.mypy]
strict = true
exclude = ["venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"